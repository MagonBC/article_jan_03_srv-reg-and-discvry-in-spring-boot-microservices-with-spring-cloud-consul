---
# tasks file for deploy
#- name: purge build dir
#  file:
#    state: absent
#    path: "/app/BuildDir/{{ module }}"
#
- name: create build dir
  file:
    state: directory
    path: "/app/BuildDir/{{ module }}"
    mode: "0755"

- name: create target dir
  file:
    state: directory
    path: "/app/BuildDir/{{ module }}/target"
    mode: "0755"

- name: copy jar file
  copy:
    src: "{{ workdir }}/{{ module }}/target/{{ module }}-{{ version }}.jar"
    dest: "{{ builddir }}/{{ module }}/target"
    force: yes

- name: copy Dockerfile
  copy: 
    src: "files/Dockerfile"
    dest: "{{ builddir }}/{{ module }}/Dockerfile"
    force: yes

- name: build container image and push to a docker registry
  podman_image:
    name: "{{ docker_registry }}/spring-{{ module }}"
    path: "{{ builddir }}/{{ module }}"
    push: yes
    force: yes
    build:
      format: docker
    push_args:
      dest: "http://{{ docker_registry }}/spring-{{ module }}"
    validate_certs: false

- name: get Pod {{ module }} info
  kubernetes.core.k8s_info:
    kubeconfig: "/etc/kubernetes/admin.conf"
    api_version: v1
    kind: Pod
    name: "{{ module }}"
    namespace: "{{ name_space }}"
  register: pod_info
  when: module != "service-b" # if a pod belong to deplyment, it will be recreated automatically !

- set_fact:
    worker_node: "{{ pod_info.resources[0].spec.nodeName }}"
  when: pod_info.resources|length > 0 && module != "service-b"

#- debug: var=pod_info
#- debug: var=worker_node

- name: delete pod in {{ worker_node }}
  kubernetes.core.k8s:
    kubeconfig: "/etc/kubernetes/admin.conf"
    state: absent
    api_version: v1
    kind: Pod
    namespace: "{{ name_space }}"
    name: "{{ module }}"
  when: pod_info.resources|length > 0 && module != "service-b"

- name: delete old image in {{ worker_node }}
  podman_image:
    name: "{{ docker_registry }}/spring-{{ module }}" 
    state: absent
  delegate_to: "{{ worker_node }}"
  when: module != "service-b"

 ### TODO: a task to delete service-b docker images ...

- name: create kube namespace
  kubernetes.core.k8s:
    force: yes
    state: present
    kubeconfig: "/etc/kubernetes/admin.conf"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ name_space }}"
        labels:
          name: "{{ name_space }}"

- name: Create a pod
  kubernetes.core.k8s:
    force: yes
    state: present
    kubeconfig: "/etc/kubernetes/admin.conf"
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        name: "{{ module }}"
        namespace: "{{ name_space }}"
        labels:
          app: "{{ module }}"
      spec:
        containers:
        - name: "{{ module }}"
          image: "{{ docker_registry }}/spring-{{ module }}" 
          command:
            - sleep
            - "3600"
          command:
            - java 
            - "-jar" 
            - "app.jar"
          imagePullPolicy: IfNotPresent
        restartPolicy: Always
  when: module != "service-b"


- name: Create two instance for {{ module }}
  kubernetes.core.k8s:
    state: present
    force: yes
    kubeconfig: "/etc/kubernetes/admin.conf"
    template: 'templates/deployment.j2'
  when: module == "service-b"

- name: Create service-a service
  kubernetes.core.k8s:
    state: present
    force: no
    kubeconfig: "/etc/kubernetes/admin.conf"
    definition:
      apiVersion: v1
      kind: service
      metadata:
        name: "{{ module }}-svc"
        namespace: "{{ name_space }}"
      spec:
        type: NodePort
        selector:
          app: "{{ module }}"
        ports:
          - port: 8081
            targetPort: 8081
            nodePort: 30981
  when: module == "service-a"

